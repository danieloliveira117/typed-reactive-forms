{"version":3,"file":"formBuilder.d.ts","sources":["formBuilder.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { FormBuilder as NgFormBuilder } from '@angular/forms';\nimport { FormArray } from './formArray';\nimport { FormControl } from './formControl';\nimport { FormGroup } from './formGroup';\nimport { AbstractControlOptions, AsyncValidatorFn, AbstractControl, OrBoxedValue, ValidatorFn } from './types';\nexport declare type FbControlConfig<T = any> = AbstractControl<T> | [OrBoxedValue<T>, ValidatorFn | ValidatorFn[] | null, AsyncValidatorFn | AsyncValidatorFn[] | null] | [OrBoxedValue<T>, ValidatorFn | ValidatorFn[] | AbstractControlOptions | null] | [T | OrBoxedValue<T>] | OrBoxedValue<T> | T;\nexport declare type FbGroupConfig<T = any> = {\n    [key in keyof T]: FbControlConfig<T[key]>;\n};\nexport declare class FormBuilder extends NgFormBuilder {\n    group<T extends object, E extends object = any, GroupConfig extends FbGroupConfig<T> = FbGroupConfig<T>>(controlsConfig: GroupConfig, options?: AbstractControlOptions<T> | {\n        validator?: ValidatorFn | ValidatorFn[];\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n    } | null): FormGroup<T, E>;\n    control<T, E extends object = any>(formState: OrBoxedValue<T>, validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null, asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null): FormControl<T, E>;\n    array<T, E extends object = any>(controlsConfig: FbControlConfig<T>[], validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null, asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null): FormArray<T, E>;\n}\n"]}